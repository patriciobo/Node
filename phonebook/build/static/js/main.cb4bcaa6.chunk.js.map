{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/Contacts.js","App.js","index.js"],"names":["Filter","handleSearch","onChange","PersonForm","handleNameChange","handleNumberChange","handleClick","onClick","type","Persons","persons","handleDeletion","map","person","key","name","number","id","Notification","className","message","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","contactService","initialContacts","event","value","target","allContacts","filter","p","toLowerCase","includes","preventDefault","contact","find","undefined","window","confirm","modifiedContact","console","log","modified","setTimeout","catch","error","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb4bcaa6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ handleSearch }) => {\r\n  return (\r\n    <div>\r\n      Name: <input onChange={handleSearch}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ handleNameChange,  handleNumberChange, handleClick}) => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        Name: <input onChange={handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        Number: <input onChange={handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n        <button onClick={handleClick} type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ persons, handleDeletion }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {persons.map((person) => \r\n          <tr key={person.name}>\r\n            <td key={person.name}>{person.name}</td>\r\n            <td key={person.number}>{person.number}</td>\r\n            <td key={person.id}>\r\n              <button onClick={() => handleDeletion(person)}>Delete</button>\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ className, message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletion = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletion }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport contactService from './services/Contacts'\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ search, setSearch ] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    contactService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        setPersons(initialContacts)\r\n      })\r\n  }, [])\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value\r\n    setSearch(value)\r\n    if(value === ''){\r\n      return(\r\n        contactService\r\n        .getAll()\r\n        .then(allContacts => {\r\n        setPersons(allContacts)\r\n      }))\r\n    }\r\n    setPersons(persons.filter(p => p.name.toLowerCase().includes(value.toLowerCase())))\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault()\r\n    const contact = persons.find(p => p.name === newName)\r\n    if(contact !== undefined){\r\n      if(window.confirm(`${newName} already exists in the phonebook, replace the old number with a new one?`)){\r\n        const modifiedContact = {\r\n          ...contact,\r\n          number: newNumber\r\n        }\r\n        console.log(modifiedContact);\r\n        contactService\r\n        .update(modifiedContact.id, modifiedContact)\r\n        .then(modified =>{\r\n          setPersons(persons.map(p => p.id === modifiedContact.id ? modified : p))\r\n          setSuccessMessage(`Contact ${modifiedContact.name} was modified successfully`)\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(`Information for user ${modifiedContact.name} has already been removed`)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n      }\r\n    }\r\n    else{\r\n      const newContact = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      contactService\r\n      .create(newContact)\r\n      .then(contact => {\r\n        setPersons(persons.concat(contact))\r\n        setSuccessMessage(`Added ${contact.name}`)\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Error: ${error.response.data.error}`)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeletion = (contact) => {\r\n    console.log(contact);\r\n    if(window.confirm(`Are you sure you want to remove ${contact.name}?`)){\r\n      contactService\r\n      .deletion(contact.id)\r\n      .then(\r\n        alert(`Contact: ${contact.name} was removed successfully`)\r\n      )\r\n    }\r\n    \r\n    setPersons(persons.filter(p => p.id !== contact.id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Notification className=\"error\" message={errorMessage}/>\r\n      <Notification className=\"success\" message={successMessage}/>\r\n      <h2>Filter</h2>\r\n        <Filter handleSearch={handleSearch} />\r\n      <h2>Add new</h2>\r\n        <PersonForm handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} handleClick={handleClick} />\r\n      <h2>Phonebook</h2>\r\n        <Persons persons={persons} handleDeletion={handleDeletion} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}